openapi: 3.0.0
info:
  title: Booking System API
  version: 1.0.0
  description: API for managing bookings (create, get, update, delete)
servers:
  - url: 'http://localhost:3000/api'
    description: Local server

paths:
  /bookings:
    post:
      summary: Create a new booking
      requestBody:
        description: Booking details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: string
                  example: "John Doe"
                date:
                  type: string
                  pattern: "^\d{4}-\d{2}-\d{2}$"
                  example: "2024-12-15"
                startTime:
                  type: string
                  pattern: "^([01]?[0-9]|2[0-3]):([0-5][0-9])$"
                  example: "10:00"
                endTime:
                  type: string
                  pattern: "^([01]?[0-9]|2[0-3]):([0-5][0-9])$"
                  example: "11:00"
      responses:
        '201':
          description: Booking created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "abc123"
                  user:
                    type: string
                    example: "John Doe"
                  date:
                    type: string
                    example: "2024-12-15"
                  startTime:
                    type: string
                    example: "10:00"
                  endTime:
                    type: string
                    example: "11:00"
        '400':
          description: Invalid input data or time slot already booked
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Time slot is already booked"

  /bookings/{id}:
    get:
      summary: Get a booking by ID
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the booking
          schema:
            type: string
      responses:
        '200':
          description: Booking found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "abc123"
                  user:
                    type: string
                    example: "John Doe"
                  date:
                    type: string
                    example: "2024-12-15"
                  startTime:
                    type: string
                    example: "10:00"
                  endTime:
                    type: string
                    example: "11:00"
        '404':
          description: Booking not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Booking not found"

    delete:
      summary: Delete a booking by ID
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the booking
          schema:
            type: string
      responses:
        '200':
          description: Booking deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Booking deleted"
        '404':
          description: Booking not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Booking not found"

  /bookings:
    get:
      summary: Get all bookings
      responses:
        '200':
          description: A list of all bookings
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: "abc123"
                    user:
                      type: string
                      example: "John Doe"
                    date:
                      type: string
                      example: "2024-12-15"
                    startTime:
                      type: string
                      example: "10:00"
                    endTime:
                      type: string
                      example: "11:00"
